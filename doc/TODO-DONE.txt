15.9.2015:

- find error with missing signature
	- solved -> 
	  features.WordFeatures.fillShapeFeatures(String, int, Alphabet, boolean) does return an empty shape list (instead of NULL)

- use model file and label map file as parameter
	- solved -> define a class ModelInfo() and use it in trainer and tagger

- define evaluation method
	- done as part of tagger
	- I am using the original conll token and the predicted labels
	- and construct a version which consistent with conlleval

- check which tool for evaluation
	the one here: /Users/gune00/data/conll/conll03-NER/bin
	can also be used for NER
	
16.9.2015:

- define a single place for major resources -> DONE

- define main function to be used by exectuable -> DONE

- train larger models -> DONE

17.9.2015

- allow training without selected features -> DONE

- allow run shells with parameters and defaults -> DONE

22.9.2015:

- first tests with NER -> DONE
	- results are not optimal, even worst than with SvmNER and MdpNER, but probably because shape and suffix features etc.
	- results with conlleval look a bit strange -> use therefore average FB1 over types
	- so need to create own evaluation version for NER

23.9.2015:
- also count unknown and known word accuracies -> DONE

- check whole code again:
	- handle GNTrainer bugs -> DONE
	- "<BOUNDARY>" in window 
		-> dummy strings that are needed if index of current token is near beginning/end of sentence
		-> note that this means that context cannot cross sentence border -> OK?
		
- NOW I am using "<BOUNDARY>" also for "<s>" and "</s>"
	
13.10.2015:

- add to training phase generation of shape features and suffix list -> DONE

- collect all data using taggerName as part of filenames -> DONE

- integrate cluster based features -> DONE!!

-> correct bug in features.WordFeatures.setOffSets() -> DONE
-> need to apdat GNT.java -> using "DUMMY" source cluster file -> DONE

- unknown word handling for distributed word vectors: cf. tagging.txt -> DONE
	BUT none effective because all unlabeled data is used for computing distributed word vectors

- use ngrams instead of suffix (simulates NemexA) -> DONE, but check again
	switch off/on: WordSuffixFeatureFactory.ngram = false;

November, 2015:

- normalize digits to 0 -> DONE
	- /GNT/doc/corpus.txt -> not effective

- run GNT on German POS and NER -> DONE

- adapt shape features -> 
	delete suffix feature properties, because they should be part of suffix feature
	DONE: some improvement
	
January, 2016:

-	Integration of new tagger name:
	- Corpus()
	- CorpusProcessor()

- POS+Morph tagging -> DONE
	- /GNT/doc/experimentsPOS+MORPH.txt
	
- Morph tagging -> DONE	
	
- Create LibLinear Input file, so that C version can be called

2. February:

- Use BIOES schema -> DONE
	- see code in /nereid/src/main/java/de/dfki/lt/nereid/nep/BIO2BILOUtransformer.java
	- should be useful for NER

9. FEB, 2016
- Property files

- Test with uniform tag set

- collect all tagger specific feature files under directory named by taggerName	

11. FEB, 2016

- labeled: I have the twitter data from Ines Rehbein
	- XML format stehen in data/twitter_gold
-> mapped to CONLL

-> defined property file

-> defined PostProcessor ala Zesch et al
	not yet complete
	
- define standalone taggers -> DONE

MAY, 2016
- generated compressed folder of all data that is necessary for tagging
	- /GNT/src/main/java/archive/package-info.java
	
- defined separate property classes for data and corpus setting and adapted trainer and tagger
  as well as src/main/resources/...
 
- create models as archive which stores all necessary information for running a tagger
	- feature files, label/word files, dataConfig.xml and model file
	