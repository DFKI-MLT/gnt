November, 2015:

analog zu /Users/gune00/dfki/DeepLearning/RelationExtraction/Gormley-EMNLP-2015.pdf

ich könnte versuchen, POS tagging, dependency parsing und word2vec feature zu integrieren
und entsprechende Vectoren zu berechnen.

corpora müssten BIO analog getagged sein - semeval 2010 - check the data set

April, 2016:

Possible feature extraction per argument/relation:

each word could be represented by a syntactic context window as outlined in Bansal et al. (2014):
E.g., for word c, parent p, grandparent g, and label l of (p,c) define:
c: l1_L g_G p c l1_l 
-> 
this representation looks a bit like super tagging -> from terminal node to X''-Bar with grandparent has head
-> so one could also consider only POS-tags for parent and grandparent 

OR:
GN: I can also think about a representation like
p:  c1 l1 p l3 g -> the context of  node is a child+label and its parent+label

-> for non-modifying words we would need padding element

Or even larger path ! then it is similar to our RTE-like kernel

NOW, BOTH would allow me to tag words with BIO like schema for argument and relation 

SEE also /nereid/doc/NemexDistantSuperVision.txt

I think, if I get this running, then adapting it to DL should not be so a big problem, then.

I could then also try to define syntactically oriented clustering/word embeddings
Or define kind of "path embeddings":
- represent each word by such a partial dependency path
- then for a sentence, do dependency parsing, create a partial path, and replace word by these partial pathes
- in this way, I can compute for each word a syntactic context window
- then apply word2vec like approach to get path embeddings

THINK:
- In doing the above, I could eventually tag candidate argument phrases and relation phrase.
- But then: how to get the relations ? 
- Maybe as a post processor that computes all possible candidate relations and selects  the highest scored ones?
- Maybe I need ako CRF approach to get simple clique structure or other graph based algorithms or a linear structured-prediction learners