
Shape features:
	Use Berkely parser word features.
	Each word is mapped to 16 bit string indicating ENGLISH orthography
	on WSJ: yields 50 different signatures (bit string instances).
	This gives 50 different shape features.

-> https://github.com/slavpetrov/berkeleyparser/blob/master/src/edu/berkeley/nlp/discPCFG/LexiconFeatureExtractor.java
-> https://github.com/slavpetrov/berkeleyparser/blob/master/src/edu/berkeley/nlp/discPCFG/LexiconFeature.java


I currently use only labeled training data:
	"/Users/gune00/data/MLDP/english/english-train-sents.txt"
	-> use all tokens from it:
	-> I also create 50 different signatures
	-> NOTE: need to distinguish whether word is in 0 or 1 sentence position

-> New training version ptb3-training: 52 shapes
	
If word cannot be mapped to one of the learned shape features, then its shape list is empty.
Which means that the feature is actually not available for that work.
This works, because shape feature lists and suffix feature lists are dynamic in length.

So seen it does not make sense to compute shape features from unlabeled training data, 
because they would not be used by the supervised training phase! Same as for suffixes.
Only if shape features would be used to create vector representations for shapes
	
Shape features are language and domain specific.